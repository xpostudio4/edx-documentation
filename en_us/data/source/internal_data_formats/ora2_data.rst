.. _ORA2 Data:

.. _`student and professor documentation`: http://SOMEWHERE

##############################
ORA2 Data: open ended assessments 
##############################

This section describes the data schema for our ORA2 peer assessment system. The system is fairly complex and allows a range of uses, so we recommend playing around with it on edx.org or in a sandbox, and reading the `student and professor documentation`_.

**********
Overview
**********

* **Workflows** track a student's submission through a particular set of steps. The top-level table is ``AssessmentWorkflow``: it specifies what steps a student has to go through to complete the component. This may be as simple as a single self-assessment, or it may contain student training, peer evaluation, and self-assessment.  The individual steps may have their own tables. For example, the ``StudentTrainingWorkflow`` tracks the student as she evaluates a set of instructor-provided samples--how many she's done, what's left, when each step was completed, etc.  ``PeerWorkflow`` tracks progress though peer grading--submitting a response and grading several peers. There is no separate table for self-assessment, since it's a single-step process.

* **Assessments** represent an assessment of a particular response. It may be a self-assessment by the student themselves or a peer-assessment by another student. Assessments are scored against Rubrics.
* **Rubrics** specify guidelines on how to assess submissions. A rubric consists of a set of ``Criterion`` entries, each of which has a set of ``CriterionOptions``. For example, one criterion for assessing writing may be "The essay is well structured", with  options "no evidence of structure--totally rambling", "there is an attempt at organizing the material, but it doesn't flow very well", and "clear structure structure from beginning to end". Rubrics are immutable, and are written to the table at the time of assessment--if a rubric for a problem changes, there'll be different entries for assessments done before and after the change.
* **Submissions** represent particular responses by a student for a given problem in a given course. A student may have multiple submissions for a given problem, and submissions could be generated by the system, e.g. to fix bugs. 
* **StudentItems** identify a particular student and a particular item in a course. They are linked to all submissions that student makes for that item, as well as to the scores for that item.


*************
Details
*************

This diagram provides a reference for the tables involved, their columns, and their relationships. Note that some of the models have a many-to-many relationship, in which case there is a table corresponding to the edge between them. An example is ``assessment_trainingexample_options_selected``.

 .. image:: ../Images/ora2-tables-erd.png
  :alt: Diagram of the primary tables used for ORA2--tracking submissions, assessments, rubrics, etc.


*********
Notes:
*********

* anonymous student ids are used throughout the ORA2 data. To link to real users, you'll need to join via the ``student_anonymoususerid`` table.
* See https://github.com/edx/edx-ora2 and https://github.com/edx/edx-submissions for the code and developer docs for this system.
* The schema diagram includes several tables with "AI" in the name. They are used for our prototype example-based ("AI") assessment system. It is not yet ready for general use, so those tables aren't included in edX data packages. 
